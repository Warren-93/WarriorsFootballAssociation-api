package mark.warren93.dev.WarriorsFootballAssociationapi.security; import io.jsonwebtoken.Claims; import jakarta.servlet.*; import jakarta.servlet.http.*; import org.springframework.security.authentication.UsernamePasswordAuthenticationToken; import org.springframework.security.core.context.SecurityContextHolder; import org.springframework.security.core.userdetails.*; import org.springframework.security.web.authentication.WebAuthenticationDetailsSource; import org.springframework.stereotype.Component; import org.springframework.util.StringUtils; import org.springframework.web.filter.OncePerRequestFilter; import java.io.IOException;
@Component public class JwtAuthFilter extends OncePerRequestFilter{ private final JwtService jwt; private final UserDetailsService uds; public JwtAuthFilter(JwtService j, UserDetailsService u){this.jwt=j; this.uds=u;}
  @Override protected void doFilterInternal(HttpServletRequest req, HttpServletResponse res, FilterChain chain) throws ServletException, IOException{
    String h=req.getHeader("Authorization"); if(StringUtils.hasText(h)&&h.startsWith("Bearer ")){ String token=h.substring(7); try{ Claims c=jwt.parse(token).getBody(); String username=(String)c.get("u"); UserDetails ud=uds.loadUserByUsername(username); var auth=new UsernamePasswordAuthenticationToken(ud,null,ud.getAuthorities()); auth.setDetails(new WebAuthenticationDetailsSource().buildDetails(req)); SecurityContextHolder.getContext().setAuthentication(auth);}catch(Exception ignored){} } chain.doFilter(req,res);
  }}